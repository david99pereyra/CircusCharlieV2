/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jgame.gradle;


import com.entropyinteractive.*;  //jgame
 
import java.awt.*;
import java.awt.event.*; //eventos

import java.awt.image.*;  //imagenes
import javax.imageio.*; //imagenes

import java.awt.Graphics2D;

import java.awt.geom.*; //Point2d
import java.util.LinkedList;

import java.util.*;
import java.text.*;

 import java.io.*;


public class Juego02 extends JGame {
 

    Date dInit = new Date();
    Date dAhora;
    SimpleDateFormat ft = new SimpleDateFormat ("mm:ss");
    final double NAVE_DESPLAZAMIENTO=150.0;

    BufferedImage img_fondo = null;
    
    Personaje chanchoVerde=new Personaje();

    public static void main(String[] args) {

        Juego02 game = new Juego02();
        game.run(1.0 / 60.0);
        System.exit(0);
    }



    public Juego02() {

        super("Juego02", 800, 600);

        System.out.println(appProperties.stringPropertyNames());

    }

    public void gameStartup() {
        System.out.println("gameStartup");
        try{
            
          
           
            
            img_fondo= ImageIO.read(getClass().getClassLoader().getResourceAsStream("imagenes/fondo-low-poly2.png"));
            
            chanchoVerde.setImagen(ImageIO.read(getClass().getClassLoader().getResourceAsStream("imagenes/pig.png")));
            
            chanchoVerde.setPosicion(getWidth() / 2,getHeight() / 2 );

            //this.cargarTTF();

            FontManager.getInstance();
        }
        catch(Exception e){
            System.out.println(e);
        }
       
    }

private void cargarTTF(){

    String[] tiposDeLetras={"CallOfOpsDutyIi-7Bgm4.ttf","SuperPixel-m2L8j.ttf","SnesItalic-1G9Be.ttf","PixelEmulator-xq08.ttf","PixelGamingRegular-d9w0g.ttf"};
    try{
        GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
        for(String ttf: tiposDeLetras){
            
            InputStream is =getClass().getClassLoader().getResourceAsStream("fonts/"+ttf);
            Font font = Font.createFont(Font.TRUETYPE_FONT, is);
            ge.registerFont(font);  
        }

        

    }catch(Exception e){
        System.out.println("ZAS! Problema al cargar tipo de letra");
    }
}
public void gameUpdate(double delta) {
        Keyboard keyboard = this.getKeyboard();
         
        // Procesar teclas de direccion
        if (keyboard.isKeyPressed(KeyEvent.VK_UP)){
            chanchoVerde.setY( chanchoVerde.getY() - NAVE_DESPLAZAMIENTO * delta);
            //shipY -= NAVE_DESPLAZAMIENTO * delta;
        }

        if (keyboard.isKeyPressed(KeyEvent.VK_DOWN)){
            //shipY += NAVE_DESPLAZAMIENTO * delta;
            chanchoVerde.setY( chanchoVerde.getY() + NAVE_DESPLAZAMIENTO * delta);
        }

        if (keyboard.isKeyPressed(KeyEvent.VK_LEFT)){
            ///shipX -= NAVE_DESPLAZAMIENTO * delta;
            chanchoVerde.setX( chanchoVerde.getX() - NAVE_DESPLAZAMIENTO * delta);
        }

        if (keyboard.isKeyPressed(KeyEvent.VK_RIGHT)){
            //shipX += NAVE_DESPLAZAMIENTO * delta;
            chanchoVerde.setX( chanchoVerde.getX() + NAVE_DESPLAZAMIENTO * delta);
        }
         

         

        // Esc fin del juego
        LinkedList < KeyEvent > keyEvents = keyboard.getEvents();
        for (KeyEvent event: keyEvents) {
            if ((event.getID() == KeyEvent.KEY_PRESSED) &&
                (event.getKeyCode() == KeyEvent.VK_ESCAPE)) {
                stop();
            }
        }


        chanchoVerde.update(delta);

    }

    public void gameDraw(Graphics2D g) {

        RenderingHints rh =
            new RenderingHints(RenderingHints.KEY_ANTIALIASING,
            RenderingHints.VALUE_ANTIALIAS_ON);

        rh.put(RenderingHints.KEY_RENDERING,
               RenderingHints.VALUE_RENDER_QUALITY);

        g.setRenderingHints(rh);

        dAhora= new Date( );
        long dateDiff = dAhora.getTime() - dInit.getTime();
        long diffSeconds = dateDiff / 1000 % 60;
        long diffMinutes = dateDiff / (60 * 1000) % 60;


        g.drawImage(img_fondo,0,0,null);// imagen de fondo

        g.setColor(Color.black);
        g.setFont(new Font("Pixel Emulator", Font.PLAIN, 16));
        
        g.drawString("Tiempo de Juego: "+diffMinutes+":"+diffSeconds,12,62);
        g.drawString("Tecla ESC = Fin del Juego ",502,62);

        g.setColor(Color.white);
        g.drawString("Tiempo de Juego: "+diffMinutes+":"+diffSeconds,10,60);
        g.drawString("Tecla ESC = Fin del Juego ",500,60);

        g.setColor(Color.red);
        
        g.setFont(new Font("SNES", Font.PLAIN, 60));
        g.drawString("SNES Emulator  ",200,220);

        chanchoVerde.draw(g);




        



    }

    public void gameShutdown() {
       Log.info(getClass().getSimpleName(), "Shutting down game");
    }
}
