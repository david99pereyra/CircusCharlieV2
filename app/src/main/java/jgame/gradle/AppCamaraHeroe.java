/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jgame.gradle;


import com.entropyinteractive.*;  //jgame
 
import java.awt.*;
import java.awt.event.*; //eventos

import java.awt.image.*;  //imagenes
import javax.imageio.*; //imagenes

import java.awt.Graphics2D;

import java.awt.geom.*; //Point2d
import java.util.LinkedList;

import java.util.*;
import java.text.*;

 


public class AppCamaraHeroe extends JGame {
 

    Date dInit = new Date( );
    Date dAhora;
    SimpleDateFormat ft = new SimpleDateFormat ("mm:ss");


    Camara cam;
    Fondo fondo;
    Heroe heroe;

    public static void main(String[] args) {

        AppCamaraHeroe game = new AppCamaraHeroe();
        game.run(1.0 / 60.0);
        System.exit(0);
    }

    public AppCamaraHeroe() {
        // call game constructor
        super("AppCamaraHeroe ", 640, 480);


    }

    public void gameStartup() {
       //   Log.info(getClass().getSimpleName(), "Starting up game");
        try{

            FXPlayer.init();
            FXPlayer.volume = FXPlayer.Volume.LOW;

            Mundo m=Mundo.getInstance();
            heroe=new Heroe("imagenes/geometry-01.png");
            heroe.setPosition(320,240);
            
            cam =new Camara(0,0);

            cam.setRegionVisible(640,480);

            //fondo=new Fondo("imagenes/background.png");
            fondo=new Fondo("imagenes/x480.png");
            m.setLimitesMundo(fondo.getWidth(), fondo.getHeight());
            heroe.quieto();
            
            FXPlayer.TEMA1.loop();
        
        }catch(Exception ex){
             System.out.println("ERROR en gameStartup");
             ex.printStackTrace();
        }
        

    }

    public void gameUpdate(double delta) {
        Keyboard keyboard = getKeyboard();

       
         if (keyboard.isKeyPressed(KeyEvent.VK_LEFT)){

            heroe.left();
        }
         if (keyboard.isKeyPressed(KeyEvent.VK_RIGHT)){

            heroe.right();
        }

        // check the list of key events for a pressed escape key
        LinkedList < KeyEvent > keyEvents = keyboard.getEvents();
        for (KeyEvent event: keyEvents) {
            if ((event.getID() == KeyEvent.KEY_RELEASED)){
                heroe.quieto();
            }
            if ((event.getID() == KeyEvent.KEY_PRESSED) &&
                (event.getKeyCode() == KeyEvent.VK_SPACE)) {
                    heroe.jump();
                    FXPlayer.FX00.play();
            }
            if ((event.getID() == KeyEvent.KEY_RELEASED) &&
                (event.getKeyCode() == KeyEvent.VK_SPACE)) {
                    heroe.jumpEnd();
                    FXPlayer.FX00.stop();
            }
            if ((event.getID() == KeyEvent.KEY_PRESSED) &&
                (event.getKeyCode() == KeyEvent.VK_ESCAPE)) {

                FXPlayer.TEMA1.stop();
                stop();
            }
        }

        heroe.update(delta);

        //heroe.applyForce(gravedad);

        cam.seguirPersonaje(heroe); ///la camara sigue al Personaje
       


    }

    public void gameDraw(Graphics2D g) {

        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        Mundo m=Mundo.getInstance();

        g.translate(cam.getX(),cam.getY());



        fondo.display(g);
            m.display(g);
        heroe.display(g);

        g.translate(-cam.getX(),-cam.getY());

        g.setColor(Color.red);
        
        g.drawString("Tecla ESC = Fin del Juego ",490,20);
    }

    public void gameShutdown() {
       //Log.info(getClass().getSimpleName(), "Shutting down game");
    }
}