/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package jgame.gradle.CircusCharlie;

import com.entropyinteractive.*;  //jgame
 
import java.awt.*;
import java.awt.event.*; //eventos

import java.awt.image.*;  //imagenes
import javax.imageio.*; //imagenes

import java.awt.geom.*; //Point2d
import java.util.*;
import java.text.*;

 
public class CircusCharlie extends JGame {

    Date dInit = new Date( );
    Date dAhora;
    SimpleDateFormat ft = new SimpleDateFormat ("mm:ss");

    Camara cam;
    Fondo fondo;
    Charlie charlie, leon;

    public static void main(String[] args) {

        CircusCharlie game = new CircusCharlie();
        game.run(1.0 / 60.0);
        System.exit(0);
    }

    public CircusCharlie() {
        // call game constructor
        super("AppCamaracharlie ", 800, 600);
    }

    public void gameStartup() {
      Log.info(getClass().getSimpleName(), "Starting up game");
        try{

            FXPlayer.init();
            FXPlayer.volume = FXPlayer.Volume.LOW;

            Mundo m=Mundo.getInstance();
            charlie=new Charlie("imagenes/charlie.png");
            charlie.setPISO(412);
            charlie.setPosition(172,charlie.getPISO());

            leon=new Charlie("imagenes/leon.png");
            leon.setPISO(475);
            leon.setPosition(143, leon.getPISO());

            cam =new Camara(0,0);

            cam.setRegionVisible(getWidth(),480);

            //fondo=new Fondo("imagenes/background.png");
            fondo=new Fondo("imagenes/FONDO.png");
            m.setLimitesMundo(fondo.getWidth(), fondo.getHeight());
            charlie.quieto();
            
            FXPlayer.DBSUPER.loop();
        
        }catch(Exception ex){
            System.out.println("ERROR en gameStartup");
            ex.printStackTrace();
        }
    }

    public void gameUpdate(double delta) {
        Keyboard keyboard = getKeyboard();
        if (keyboard.isKeyPressed(KeyEvent.VK_LEFT)){
            if(leon.getX() > 10){
                charlie.left();
                leon.left();
            }
        }
        if (keyboard.isKeyPressed(KeyEvent.VK_RIGHT)){
            if(leon.getX()<(fondo.getWidth()-116)){
                charlie.right();
                leon.right();
            }
        }

        // check the list of key events for a pressed escape key
        LinkedList < KeyEvent > keyEvents = keyboard.getEvents();
        for (KeyEvent event: keyEvents) {
            if ((event.getID() == KeyEvent.KEY_RELEASED)){
                charlie.quieto();
               leon.quieto();
            }
            if ((event.getID() == KeyEvent.KEY_PRESSED) &&
                (event.getKeyCode() == KeyEvent.VK_SPACE)) {
                charlie.jump();
               leon.jump();
                FXPlayer.FX00.play();
            }
            if ((event.getID() == KeyEvent.KEY_PRESSED) &&
                (event.getKeyCode() == KeyEvent.VK_ESCAPE)) {

                FXPlayer.DBSUPER.stop();
                stop();
            }
        }

        leon.update(delta);
        charlie.update(delta);

        //charlie.applyForce(gravedad);

        cam.seguirPersonaje(charlie); ///la camara sigue al Personaje
        cam.seguirPersonaje(leon);
       
    }

    public void gameDraw(Graphics2D g) {

        g.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);

        Mundo m=Mundo.getInstance();

        g.translate(cam.getX(),cam.getY());

        fondo.display(g);
        m.display(g);
        leon.display(g);
        charlie.display(g);

        g.translate(-cam.getX(),-cam.getY());

        g.setColor(Color.red);
        
        g.drawString("Tecla ESC = Fin del Juego ",490,20);
    }

    public void gameShutdown() {
       //Log.info(getClass().getSimpleName(), "Shutting down game");
    }
}